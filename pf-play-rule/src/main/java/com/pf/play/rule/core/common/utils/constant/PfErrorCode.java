package com.pf.play.rule.core.common.utils.constant;

/**
 * @Description 异常状态码
 * @Author yoko
 * @Date 2019/11/21 14:48
 * @Version 1.0
 */
public class PfErrorCode {

    /**
     * 常量异常
     */
    public final class ERROR_CONSTANT {
        /**
         * 没有被捕捉到的异常
         * 默认系统异常状态码=255
         */
        public static final String DEFAULT_EXCEPTION_ERROR_CODE = "255";

        /**
         * 没有被捕捉到的异常
         * 默认系统异常错误信息=SYS_ERROR
         */
        public static final String DEFAULT_EXCEPTION_ERROR_MESSAGE = "ERROR";

        /**
         * 被捕捉到的异常，则默认异常状态码
         * 默认捕捉的异常状态码=256
         */
        public static final String DEFAULT_SERVICE_EXCEPTION_ERROR_CODE = "256";

    }



    /**
     * 异常-枚举类
     */
    public enum ENUM_ERROR {
        /***********************************************
         * C打头表示用户的错误
         **********************************************/
        C00000("C00000", "请登录!", "服务端token失效!"),
        C00001("C00001", "数据为空,请填写数据!", "修改支付密码时,所有数据都为空!"),
        C00002("C00002", "错误,请重试!", "客户端没有传token值!"),
        C00003("C00003", "请填写支付密码!", "请填写支付密码!"),
        C00004("C00004", "请填写验证码!", "用户修改支付密码时,验证码为空!"),
        C00005("C00005", "验证码输入有误,请重试!", "验证码输入有误!"),
        C00006("C00006", "验证码超时,请重试!", "验证码超时!"),
        C00007("C00007", "数据为空,请填写数据!", "用户添加固定账号数据时,所有数据都为空!"),
        C00008("C00008", "姓名不能为空,请填写真实姓名!", "添加固定账号数据时,姓名数据为空!"),
        C00009("C00009", "身份证号不能为空,请填写身份证号!", "添加固定账号数据时,身份证号数据为空!"),
        C00010("C00010", "支付宝账号不能为空,请填写支付宝账号!", "添加固定账号数据时,支付宝账号数据为空!"),
        C00011("C00011", "错误,请重试!", "获取用户固定账号信息时,所有数据都为空!"),
        C00012("C00012", "数据已录入,无需在录入!", "用户添加固定账号数据时:数据库已经存在有数据!"),
        C00013("C00013", "数据为空,请填写数据!", "更新用户固定账号数据时,所有数据都为空!"),
        C00014("C00014", "支付宝账号不能为空,请填写支付宝账号!", "更新用户固定账号数据时,支付宝账号数据为空!"),
        C00015("C00015", "错误,请重试!", "获取用户手续费比例时,客户端请求的所有数据都为空!"),
        C00016("C00016", "错误,请重试!", "获取用户手续费比例时,查询数据库数据为空!"),
        C00017("C00017", "错误,请重试!", "获取用户手续费比例时,用户的具体需要收取的比例值为空!"),
//        A00002("A00002", "客户端传的appKey为空!"),


        /***********************************************
         * P打头表示虚拟货币每日兑换的价格相关的错误信息
         **********************************************/
        P00001("P00001", "请登录!", "服务端token失效!"),
        P00002("P00002", "错误,请重试!", "获取虚拟币每天兑换的价格信息时,所有数据都为空!"),
        P00003("P00003", "错误,请重试!", "获取虚拟币每天兑换价格的数据为空!"),
        P00004("P00004", "错误,请重试!", "获取虚拟币今天兑换价格的数据为空!"),


        /***********************************************
         * D打头表示订单相关的错误信息
         **********************************************/
        D00001("D00001", "错误,请重试!", "获取订单列表信息时,所有数据都为空!"),
        D00002("D00002", "错误,请重试!", "发布订单时,所有数据都为空!"),
        D00003("D00003", "请填写要购买的数量!", "发布订单时,购买的数量为空!"),
        D00004("D00004", "请填写购买的单价!", "发布订单时,购买的单价为空!"),
        D00005("D00005", "请按照推荐单价范围进行单价填写!", "发布订单时,购买的单价价格不符合范围内!"),
        D00006("D00006", "错误,请重试!", "订单取消时,订单号为空!"),
        D00007("D00007", "错误,请重试!", "订单取消时,从数据库查询不到订单数据!"),
        D00008("D00008", "错误,订单无法取消!", "订单取消时,订单状态不是正常状态,所以订单无法取消!"), // 订单状态：1正常，2取消，3完成交易
        D00009("D00009", "订单正在交易中,订单无法取消!", "订单取消时,订单交易状态不是初始化状态,所以订单无法取消!"), // 订单交易状态：0初始化，1锁定，2完成
        D00010("D00010", "订单正在交易中,订单无法取消!", "订单取消时,redis锁有其它操作,所以订单无法取消!"),
        D00011("D00011", "错误,请重试!", "获取待付款订单时,所有数据都为空!"),


        /***********************************************
         * T打头表示交易相关的错误信息
         **********************************************/
        T00001("T00001", "错误,请重试!", "获取交易的开市时间时,所有数据都为空!"),
        T00002("T00002", "错误,请重试!", "数据库查询开市时间时,数据为空!"),
        T00003("T00003", "错误,请重试!", "开市时间的具体值,数据为空!"),
        T00004("T00004", "错误,请重试!", "添加订单流水时,所有数据都为空!"),
        T00005("T00005", "错误,请重试!", "添加订单流水时,订单号数据都为空!"),
        T00006("T00006", "错误,请重试!", "卖家在卖给买家订单时,根据订单号查询数据为空!"),
        T00007("T00007", "错误,请重试!", "卖家在卖给买家订单时,根据卖家的用户ID查询用户数据为空!"),
        T00008("T00008", "请进行实名认证后,在进行操作!", "卖家在卖给买家订单时,卖家没有实名认证!"),
        T00009("T00009", "请设置支付密码,在进行操作!", "卖家在卖给买家订单时,卖家没有设置支付密码!"),
        T00010("T00010", "您处于黑名单用户!", "卖家在卖给买家订单时,卖家属于黑名单用户!"),
        T00011("T00011", "请设置您的收款账号,在进行操作!", "卖家在卖给买家订单时,卖家没有填写自己的收款账号!"),
        T00012("T00012", "错误,请重试!", "卖家在卖给买家订单时,根据买家的用户ID查询用户数据为空!"),
        T00013("T00013", "请输入您的支付密码!", "卖家在卖给买家订单时,卖家没有输入支付密码!"),
        T00014("T00014", "支付密码输入错误,请重试!", "卖家在卖给买家订单时,卖家输入的支付密码与数据库设置的支付密码不一致!"),
        T00015("T00015", "买家已取消订单,请选择其它订单进行交易!", "订单生成交易流水时,redis锁有其它操作(订单正在取消中),所以订单无法交易!"),
        T00016("T00016", "错误,请重试!", "用户在卖给买家时,操作资源的加减,redis锁有其他操作,所以卖家无法交易!"),
        T00017("T00017", "您没有足够钻石进行支付此订单!", "在订单交易流水时,卖家没有足够的钻石进行支付!"),
        T00018("T00018", "错误,请重试!", "获取交易所当前买辆、成交量时,策略类型为虚假数据开关没有部署相对应的策略!"),


        ;


        /**
         * 错误码
         */
        private String eCode;
        /**
         * 给客户端看的错误信息
         */
        private String eDesc;
        /**
         * 插入数据库的错误信息
         */
        private String dbDesc;

        private ENUM_ERROR(String eCode, String eDesc, String dbDesc) {
            this.eCode = eCode;
            this.eDesc = eDesc;
            this.dbDesc =dbDesc;
        }

        public String geteCode() {
            return eCode;
        }

        public void seteCode(String eCode) {
            this.eCode = eCode;
        }

        public String geteDesc() {
            return eDesc;
        }

        public void seteDesc(String eDesc) {
            this.eDesc = eDesc;
        }

        public String getDbDesc() {
            return dbDesc;
        }

        public void setDbDesc(String dbDesc) {
            this.dbDesc = dbDesc;
        }
    }
}
