<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pf.play.rule.core.mapper.VcMemberMapper" >
  <resultMap id="BaseResultMap" type="com.pf.play.rule.core.model.VcMember" >
    <id column="member_id" property="memberId" jdbcType="INTEGER" />
    <result column="owner_member_id" property="ownerMemberId" jdbcType="INTEGER" />
    <result column="member_add" property="memberAdd" jdbcType="VARCHAR" />
    <result column="nickname" property="nickname" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="member_code" property="memberCode" jdbcType="VARCHAR" />
    <result column="member_type" property="memberType" jdbcType="INTEGER" />
    <result column="empirical_level" property="empiricalLevel" jdbcType="INTEGER" />
    <result column="daren_level" property="darenLevel" jdbcType="INTEGER" />
    <result column="is_vitality_value" property="isVitalityValue" jdbcType="INTEGER" />
    <result column="invite_code" property="inviteCode" jdbcType="VARCHAR" />
    <result column="trading_address" property="tradingAddress" jdbcType="VARCHAR" />
    <result column="device_id" property="deviceId" jdbcType="VARCHAR" />
    <result column="is_certification" property="isCertification" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="INTEGER" />
    <result column="is_active" property="isActive" jdbcType="INTEGER" />
    <result column="login_time" property="loginTime" jdbcType="INTEGER" />
    <result column="is_sett" property="isSett" jdbcType="INTEGER" />
    <result column="extension_member_id" property="extensionMemberId" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    member_id, owner_member_id, member_add, nickname, password, member_code, member_type, 
     invite_code, trading_address, is_certification,
    create_time, is_active, login_time, is_sett, extension_member_id,device_id,superior_id,extension_member_id
  </sql>

  <sql id="Base_Column_ListTwo" >
    a.member_id, a.owner_member_id, a.member_add, a.nickname, a.password, a.member_code, a.member_type

  </sql>
  <select id="selectByPrimaryKey" resultType="com.pf.play.rule.core.model.VcMember" >
    select 
    <include refid="Base_Column_List" />
    from vc_member
    where 1=1
    <if test="memberCode != null and memberCode != '' " >
      and member_code = #{memberCode}
    </if>
    <if test="deviceId != null and deviceId != '' " >
      and device_id = #{deviceId}
    </if>
    <if test="inviteCode != null and inviteCode != '' " >
      and invite_code = #{inviteCode}
    </if>
    <if test="memberId != null and memberId != '' " >
      and member_id = #{memberId}
    </if>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from vc_member
    where member_id = #{memberId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.pf.play.rule.core.model.VcMember" >
    insert into vc_member (member_id, owner_member_id, member_add, 
      nickname, password, member_code, 
      member_type,  invite_code, trading_address,
      is_certification, create_time, is_active, 
      login_time, is_sett, extension_member_id,device_id,superior_id
      )
    values (#{memberId,jdbcType=INTEGER}, #{ownerMemberId,jdbcType=INTEGER}, #{memberAdd,jdbcType=VARCHAR}, 
      #{nickname,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{memberCode,jdbcType=VARCHAR}, 
      #{memberType,jdbcType=BIT} #{inviteCode,jdbcType=VARCHAR}, #{tradingAddress,jdbcType=VARCHAR},
      #{isCertification,jdbcType=BIT}, #{createTime,jdbcType=INTEGER}, #{isActive,jdbcType=BIT}, 
      #{loginTime,jdbcType=INTEGER}, #{isSett,jdbcType=BIT}, #{extensionMemberId,jdbcType=VARCHAR},
      #{deviceId,jdbcType=VARCHAR},#{superiorId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.pf.play.rule.core.model.VcMember" >
    insert into vc_member
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="memberId != null" >
        member_id,
      </if>
      <if test="ownerMemberId != null" >
        owner_member_id,
      </if>
      <if test="memberAdd != null" >
        member_add,
      </if>
      <if test="nickname != null" >
        nickname,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="memberCode != null" >
        member_code,
      </if>
      <if test="memberType != null" >
        member_type,
      </if>

      <if test="inviteCode != null" >
        invite_code,
      </if>
      <if test="tradingAddress != null" >
        trading_address,
      </if>
      <if test="isCertification != null" >
        is_certification,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="isActive != null" >
        is_active,
      </if>
      <if test="loginTime != null" >
        login_time,
      </if>
      <if test="isSett != null" >
        is_sett,
      </if>
      <if test="extensionMemberId != null" >
        extension_member_id,
      </if>
      <if test="deviceId != null" >
        device_id,
      </if>
      <if test="superiorId != null" >
        superior_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="memberId != null" >
        #{memberId},
      </if>
      <if test="ownerMemberId != null" >
        #{ownerMemberId},
      </if>
      <if test="memberAdd != null" >
        #{memberAdd},
      </if>
      <if test="nickname != null" >
        #{nickname},
      </if>
      <if test="password != null" >
        #{password},
      </if>
      <if test="memberCode != null" >
        #{memberCode},
      </if>
      <if test="memberType != null" >
        #{memberType},
      </if>
      <if test="empiricalLevel != null" >
        #{empiricalLevel},
      </if>
      <if test="darenLevel != null" >
        #{darenLevel},
      </if>
      <if test="isVitalityValue != null" >
        #{isVitalityValue},
      </if>
      <if test="inviteCode != null" >
        #{inviteCode},
      </if>
      <if test="tradingAddress != null" >
        #{tradingAddress},
      </if>
      <if test="isCertification != null" >
        #{isCertification},
      </if>
      <if test="createTime != null" >
        #{createTime},
      </if>
      <if test="isActive != null" >
        #{isActive},
      </if>
      <if test="loginTime != null" >
        #{loginTime},
      </if>
      <if test="isSett != null" >
        #{isSett},
      </if>
      <if test="extensionMemberId != null" >
        #{extensionMemberId},
      </if>
      <if test="deviceId != null" >
        #{deviceId},
      </if>
      <if test="superiorId != null" >
        #{superiorId},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.pf.play.rule.core.model.VcMember" >
    update vc_member
    <set >
      <if test="ownerMemberId != null" >
        owner_member_id = #{ownerMemberId,jdbcType=INTEGER},
      </if>
      <if test="memberAdd != null" >
        member_add = #{memberAdd,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="memberCode != null" >
        member_code = #{memberCode,jdbcType=VARCHAR},
      </if>
      <if test="memberType != null" >
        member_type = #{memberType,jdbcType=BIT},
      </if>

      <if test="inviteCode != null" >
        invite_code = #{inviteCode,jdbcType=VARCHAR},
      </if>
      <if test="tradingAddress != null" >
        trading_address = #{tradingAddress,jdbcType=VARCHAR},
      </if>
      <if test="isCertification != null" >
        is_certification = #{isCertification,jdbcType=BIT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=INTEGER},
      </if>
      <if test="isActive != null" >
        is_active = #{isActive,jdbcType=BIT},
      </if>
      <if test="loginTime != null" >
        login_time = #{loginTime,jdbcType=INTEGER},
      </if>
      <if test="isSett != null" >
        is_sett = #{isSett,jdbcType=BIT},
      </if>
      <if test="extensionMemberId != null" >
        extension_member_id = #{extensionMemberId,jdbcType=VARCHAR},
      </if>
      <if test="deviceId != null" >
        deviceId = #{deviceId,jdbcType=VARCHAR},
      </if>
      <if test="superiorId != null" >
        deviceId = #{superiorId,jdbcType=INTEGER},
      </if>
    </set>
    where member_id = #{memberId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pf.play.rule.core.model.VcMember" >
    update vc_member
    set owner_member_id = #{ownerMemberId,jdbcType=INTEGER},
      member_add = #{memberAdd,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      member_code = #{memberCode,jdbcType=VARCHAR},
      member_type = #{memberType,jdbcType=BIT},
      invite_code = #{inviteCode,jdbcType=VARCHAR},
      trading_address = #{tradingAddress,jdbcType=VARCHAR},
      is_certification = #{isCertification,jdbcType=BIT},
      create_time = #{createTime,jdbcType=INTEGER},
      is_active = #{isActive,jdbcType=BIT},
      login_time = #{loginTime,jdbcType=INTEGER},
      is_sett = #{isSett,jdbcType=BIT},
      extension_member_id = #{extensionMemberId,jdbcType=VARCHAR}
    where member_id = #{memberId,jdbcType=INTEGER}
  </update>


  <select id="selectByCodeOrAddress" resultType="com.pf.play.rule.core.model.VcMember" >
    select
    <include refid="Base_Column_ListTwo" />
    from vc_member a  inner  join   vc_third_party b
    on a.member_id =b.member_id
    where 1=1
    and (a.invite_code = #{inviteCode} or a.trading_address  = #{tradingAddress} or b.token=#{token} )
  </select>


  <!-- 更新用户的支付密码 -->
  <update id="updatePayPassword" parameterType="Object" >
    update vc_member a
    <trim prefix="set" suffixOverrides=",">
      <if test="payPassword != null and payPassword != '' " >
        a.pay_password = #{payPassword},
      </if>
    </trim>
    where 1=1
    and a.member_id = #{memberId}
  </update>

</mapper>